Análise do Primeiro símbolo
===========================

Sumário
-------

Fatorações:

Fator foi separado em Fator' para tirar a ambigüidade de Identificador.

Primeira parte
--------------

Programa -> program Identificador ; Bloco .
Bloco -> [ DeclVars ] ComandoComposto
DeclVars -> var ListaVariaveis { ; ListaVariaveis } ;
ListaVariáveis -> Variável { , Variável } : Tipo
Tipo -> Identificador
ComComposto -> begin Comando { ; Comando } end
Comando -> Atribuição | ComandoComposto
Atribuição -> Variável := Expressão
Expressão -> ExpressãoSimples [ OpRelacao ExpressãoSimples ]
OpRelacao -> = | < | <= | <> | > | >=
ExpressãoSimples -> [+|-] Termo { (+ | - | or) Termo }
Termo -> Fator { (* | div | and) Fator }
Fator -> Variável | Numero | ( Expressão ) | not Fator
Variável -> Identificador

Programa	| TOK_KW_PROGRAM
Bloco		| TOK_KW_VAR TOK_KW_BEGIN 
DeclVars	| TOK_KW_VAR
ListaVariaveis	| TOK_IDENTIFIER
Tipo		| TOK_IDENTIFIER
ComComposto	| TOK_KW_BEGIN
Comando		| TOK_IDENTIFIER TOK_KW_BEGIN
Atribuição	| TOK_IDENTIFIER
Expressão	| TOK_PLUS TOK_MINUS TOK_IDENTIFIER TOK_INTEGER TOK_REAL
		  TOK_LPARENTHESIS TOK_KW_NOT
OpRelacao	| TOK_EQUAL TOK_LESSTHAN TOK_LESSEQTHAN TOK_DIFFERENT
                  TOK_GREATERTHAN TOK_GREATEREQTHAN
ExpressãoSimples| TOK_PLUS TOK_MINUS TOK_IDENTIFIER TOK_INTEGER TOK_REAL
                  TOK_LPARENTHESIS TOK_KW_NOT
Termo		| TOK_IDENTIFIER TOK_INTEGER TOK_REAL TOK_LPARENTHESIS
		  TOK_KW_NOT
Fator		| TOK_IDENTIFIER TOK_INTEGER TOK_REAL TOK_LPARENTHESIS
		  TOK_KW_NOT
Variável	| TOK_IDENTIFIER

2a Parte:

Comando -> Atribuição | ComComposto | ComCondicional | ComRepetitivo | ComDesvio
Bloco -> [ DeclLabels ] [ DeclConstantes ] [ DeclVars ] ComandoComposto
Fator -> Variável | Constante | Numero | ( Expressão ) | not Fator | Caracter
Variável -> Identificador | Identificador [ Numero ]

DeclLabels -> label Numero { , Numero } ;
DeclConstantes -> const DefinConstante { ; DefinConstante } ;
DefinConstante -> Identificador = ( Numero | Caracter )
Constante -> Identificador
ComCondicional -> if Expressão then Comando [ else Comando ]
ComRepetitivo -> while Expressão do Comando | repeat Comando until Expressão
ComDesvio -> goto Numero

* TOK_STRING é na verdade char (string de tamanho 1)

Comando		| TOK_IDENTIFIER TOK_KW_BEGIN TOK_KW_IF TOK_KW_WHILE TOK_KW_REPEAT
                  TOK_KW_GOTO
Bloco		| TOK_KW_LABEL TOK_KW_CONST TOK_KW_VAR TOK_KW_BEGIN
Fator		| TOK_IDENTIFIER TOK_OPENINGBRACKET TOK_INTEGER TOK_REAL TOK_LPARENTHESIS
                  TOK_KW_NOT TOK_KW
Variável	| TOK_IDENTIFIER TOK_OPENINGBRACKET
DeclLabels	| TOK_KW_LABEL
DeclConstantes	| TOK_KW_CONST
DefinConstante	| TOK_IDENTIFIER
Constante	| TOK_IDENTIFIER
ComCondicional	| TOK_KW_IF
ComRepetitivo   | TOK_KW_WHILE TOK_KW_REPEAT
ComDesvio	| TOK_KW_GOTO

3a parte:

Comando -> Identificador ChamadaProcedimentoOuAtribuição | ComComposto | ComCondicional | 
           ComRepetitivo | ComDesvio
ChamadaProcedimentoOuAtribuição ->  ( ListaExpressoes ) | epslon |
            AtribuiçãoDepoisDeIndentificador
AtribuiçãoDepoisDeIndentificador -> [ [ Inteiro ] ] := Expressão
Bloco -> [ DeclLabels ] [ DeclConstantes ] [ DeclVars ] [ DeclSub ] ComandoComposto
Fator -> Numero | ( Expressão ) | not Fator | Caracter | Identificador Fator'
Fator' -> є | ( ListaExpressoes )

DeclSub -> { DeclProcedimento ; | DeclFunção ; }
DeclProcedimento -> procedure Identificador [( Parâmetros { ; Parâmetros })] ; Bloco
DeclFunção -> function Identificador [( Parâmetros { ; Parâmetros })] : Tipo ; Bloco
Parâmetros -> [var] ListaVariaveis
ChamadaProcedimento -> Identificador [ ( ListaExpressoes ) ]
ChamadaFuncao -> Identificador [ ( ListaExpressoes ) ]
ListaExpressoes -> Expressão { , Expressão }


Comando		| TOK_IDENTIFIER(Atribuição) TOK_IDENTIFIER(ChamadaProcedimento) 
                  TOK_KW_BEGIN TOK_KW_IF (TOK_KW_WHILE TOK_KW_REPEAT)
                  TOK_KW_GOTO
Bloco		| TOK_KW_LABEL TOK_KW_CONST TOK_KW_VAR TOK_KW_PROCEDURE(DeclSub)
                  TOK_KW_FUNCTION(DeclSub) TOK_KW_BEGIN
Fator		| TOK_REAL TOK_IDENTIFIER TOK_LPARENTHESIS TOK_KW_NOT TOK_CHAR
                  TOK_IDENTIFIER
Fator'		| TOK_LPARENTHESIS
DeclSub		| TOK_KW_PROCEDURE TOK_KW_FUNCTION
DeclProcedimento| TOK_KW_PROCEDURE
DeclFunção	| TOK_KW_FUNCTION
Parâmetros	| TOK_KW_VAR TOK_IDENTIFIER
ChamadaProcedimento | TOK_IDENTIFIER
ListaExpressoes	    | TOK_PLUS TOK_MINUS TOK_IDENTIFIER TOK_INTEGER TOK_REAL
		      TOK_LPARENTHESIS TOK_KW_NOT
ChamadaProcedimentoOuAtribuição | TOK_LPARENTHESIS TOK_OPENINGBRACKET
                                  TOK_ASSIGNMENT
AtribuiçãoDepoisDeIndentificador| TOK_OPENINGBRACKET TOK_ASSIGNMENT

Modificações durante o segundo semestre:
---------------------------------------

Programa -> program Identificador [ (Identificador {, Identificador}) ] ; Bloco .
